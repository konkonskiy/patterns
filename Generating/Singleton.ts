class MyMap {
  private static instance: MyMap

  map: Map<number, string> = new Map()

  private constructor() {} // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏ –µ—Å—Ç—å —Ñ–∏—à–∫–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞ –Ω–∞ TS

  clean() {
    this.map = new Map()
  }

  public static get(): MyMap {
    if (!MyMap.instance) {
      MyMap.instance = new MyMap() // –¢–∞–∫ –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Å—Ç–∞–Ω—Å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞
    }

    return MyMap.instance
  }
}

class Service1 {
    addMap(key: number, value: string) {
        const myMap = MyMap.get()
        myMap.map.set(key, value)
    }
}

class Service2 {
  getKeys(key: number) {
    const myMap = MyMap.get()
    console.log("üöÄ ~ file: Singleton.ts ~ line 31 ~ Service2 ~ getKeys ~ myMap", myMap.map.get(key))
    myMap.clean()
    console.log('üöÄ ~ file: Singleton.ts ~ line 31 ~ Service2 ~ getKeys ~ myMap', myMap.map.get(key))
  }
}